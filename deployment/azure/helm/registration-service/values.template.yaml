service:
  type: NodePort

replicaCount: 1

image:
  repository: acrmvdpaul.azurecr.io/mvd/registration-service
  tag: ${RESOURCES_PREFIX}
  pullPolicy: Always


imagePullSecrets: [{name: acr-creds}]
nameOverride: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ports:
  http:
    containerPort: 8181
    servicePort: 8181
    path: /api
  identity:
    containerPort: 7171
    servicePort: 7171
    path: /api/v1/identity
  authority:
    containerPort: 8184
    path: /authority
  mgmt:
    containerPort: 9191
    servicePort: 9191
    path: /api/v1/management

volumes:
  - name: sdd
    hostPath:
      # TOOD: make this relative
      path: /host/resources/self-description/registration-service/

edc:
  env:
    # use "envsubst" on a shell to replace the env vars with their actual value

    JWT_AUDIENCE: http://registration-service:8184/authority
    EDC_WEB_REST_CORS_ENABLED: "true"
    EDC_WEB_REST_CORS_HEADERS: "origin,content-type,accept,authorization,x-api-key"
    EDC_IAM_DID_WEB_USE_HTTPS: true

    EDC_CONNECTOR_NAME: "registration-service"
    EDC_SELF_DESCRIPTION_DOCUMENT_PATH: /resources/sdd.json

    # these are set dynamically
    EDC_IDENTITY_DID_URL: "did:web:${RESOURCES_PREFIX}dataspacedid.z13.web.core.windows.net"
    EDC_VAULT_NAME: "kv${RESOURCES_PREFIX}registration"
    EDC_VAULT_CLIENTID: "${APP_CLIENT_ID}"
    EDC_VAULT_TENANTID: "${ARM_TENANT_ID}"

    # Web context configuration:
    WEB_HTTP_PORT: 8181
    WEB_HTTP_PATH: /api
    WEB_HTTP_IDS_PORT: 8282
    WEB_HTTP_IDS_PATH: /api/v1/ids
    WEB_HTTP_MANAGEMENT_PORT: 9191
    WEB_HTTP_MANAGEMENT_PATH: /api/v1/management
    WEB_HTTP_IDENTITY_PORT: 7171
    WEB_HTTP_IDENTITY_PATH: /api/v1/identity
    WEB_HTTP_AUTHORITY_PORT: 8184
    WEB_HTTP_AUTHORITY_PATH: /authority

  envSecrets:
    EDC_VAULT_CLIENTSECRET: "${APP_CLIENT_SECRET}"
    EDC_API_AUTH_KEY: "ApiKeyDefaultValue"

  volumeMounts:
    - name: sdd
      mountPath: /resources
      readOnly: true
  # Mount the provided volume in the POD filesystem at the specific path. Please refer to
  # https://kubernetes.io/fr/docs/concepts/storage/volumes/ for more details.
  # Example:
  # - name: config-vol
  #   mountPath: /etc/config
  # will mount the `config-vol` volume at /etc/config

#service:
#  type: ClusterIP

ingress:
  enabled: false
  ingressClassName: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: registration-service.local
      paths: []

  tls: []
  #  - secretName: registration-service-tls
  #    hosts:
  #      - registration-service.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
