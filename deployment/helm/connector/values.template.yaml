image:
  repository: acrmvdpaul.azurecr.io/mvd/connector
  tag: ${RESOURCES_PREFIX}
  pullPolicy: Always

imagePullSecrets: [ { name: acr-creds } ]

service:
  type: ClusterIP

replicaCount: 1
nameOverride: ""

podAnnotations: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }

ports:
  http:
    containerPort: 8181
    servicePort: 8181
    path: /api
  ids:
    containerPort: 8282
    servicePort: 8282
    path: /api/v1/ids
  mgmt:
    containerPort: 9191
    servicePort: 9191
    path: /api/v1/management
  identity:
    containerPort: 7171
    servicePort: 7171
    path: /api/v1/identity

volumes:
  - name: sdd
    hostPath:
      path: /host/resources/self-description/${PARTICIPANT}/


# use "envsubst" on a shell to replace the env vars with their actual value

edc:
  env:
    REGISTRATION_SERVICE_API_URL: http://registration-service:8184/authority
    EDC_CATALOG_CACHE_EXECUTION_DELAY_SECONDS: 5
    EDC_CATALOG_CACHE_EXECUTION_PERIOD_SECONDS: 5
    EDC_CATALOG_CACHE_PARTITION_NUM_CRAWLERS: 5
    EDC_WEB_REST_CORS_ENABLED: "true"
    EDC_WEB_REST_CORS_HEADERS: "origin,content-type,accept,authorization,x-api-key"
    EDC_IAM_DID_WEB_USE_HTTPS: true

    IDS_WEBHOOK_ADDRESS: http://${PARTICIPANT}-connector:8282
    EDC_CONNECTOR_NAME: "connector-${PARTICIPANT}"
    EDC_SELF_DESCRIPTION_DOCUMENT_PATH: /resources/sdd.json

    # these are set dynamically
    EDC_IDENTITY_DID_URL: "did:web:${RESOURCES_PREFIX}${PARTICIPANT}did.z13.web.core.windows.net"
    EDC_VAULT_NAME: "kv${RESOURCES_PREFIX}${PARTICIPANT}"
    EDC_VAULT_CLIENTID: "${APP_CLIENT_ID}"
    EDC_VAULT_TENANTID: "${ARM_TENANT_ID}"

    # Web context configuration:
    WEB_HTTP_PORT: 8181
    WEB_HTTP_PATH: /api
    WEB_HTTP_IDS_PORT: 8282
    WEB_HTTP_IDS_PATH: /api/v1/ids
    WEB_HTTP_MANAGEMENT_PORT: 9191
    WEB_HTTP_MANAGEMENT_PATH: /api/v1/management
    WEB_HTTP_IDENTITY_PORT: 7171
    WEB_HTTP_IDENTITY_PATH: /api/v1/identity

  envSecrets:
    EDC_API_CONTROL_AUTH_APIKEY_VALUE: ApiKeyDefaultValue
    EDC_VAULT_CLIENTSECRET: "${APP_CLIENT_SECRET}"
    EDC_API_AUTH_KEY: "ApiKeyDefaultValue"

  volumeMounts:
    - name: sdd
      mountPath: /resources
      readOnly: true

ingress:
  enabled: true
  ingressClassName: "nginx"
  annotations:
#    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ${PARTICIPANT}.connector
      paths:
        - path: /api/v1/management
          pathType: Prefix
          port: 9191

        - path: /api/v1/ids
          pathType: Prefix
          port: 8282

        - path: /api/v1/identity
          pathType: Prefix
          port: 7171


  tls: [ ]
  #  - secretName: connector-tls
  #    hosts:
  #      - connector.local

resources: { }

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }

# config values for the dependencies

catalog:
  image:
    repository: acrmvdpaul.azurecr.io/mvd/catalog
    tag: ${RESOURCES_PREFIX}
    pullPolicy: Always
  imagePullSecrets: [ { name: acr-creds } ]

# Declare an ingress that redirects to the catalog service
  ingress:
    enabled: true
    ingressClassName: "nginx"
    annotations:
    #    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: ${PARTICIPANT}.catalog
        paths:
          - path: /api/v1/management/federatedcatalog
            pathType: Exact
            port: 9191

  fcc:
    env:
      REGISTRATION_SERVICE_API_URL: http://registration-service:8184/authority
      EDC_CATALOG_CACHE_EXECUTION_DELAY_SECONDS: 5
      EDC_CATALOG_CACHE_EXECUTION_PERIOD_SECONDS: 5
      EDC_CATALOG_CACHE_PARTITION_NUM_CRAWLERS: 5
      EDC_WEB_REST_CORS_ENABLED: "true"
      EDC_WEB_REST_CORS_HEADERS: "origin,content-type,accept,authorization,x-api-key"
      EDC_IAM_DID_WEB_USE_HTTPS: true

      IDS_WEBHOOK_ADDRESS: http://${PARTICIPANT}-connector:8282
      EDC_CONNECTOR_NAME: "connector-${PARTICIPANT}"
      EDC_SELF_DESCRIPTION_DOCUMENT_PATH: /resources/sdd.json

      # these are set dynamically
      EDC_IDENTITY_DID_URL: "did:web:${RESOURCES_PREFIX}${PARTICIPANT}did.z13.web.core.windows.net"
      EDC_VAULT_NAME: "kv${RESOURCES_PREFIX}${PARTICIPANT}"
      EDC_VAULT_CLIENTID: "${APP_CLIENT_ID}"
      EDC_VAULT_TENANTID: "${ARM_TENANT_ID}"

      # Web context configuration:
      WEB_HTTP_PORT: 8181
      WEB_HTTP_PATH: /api
      WEB_HTTP_IDS_PORT: 8282
      WEB_HTTP_IDS_PATH: /api/v1/ids
      WEB_HTTP_MANAGEMENT_PORT: 9191
      WEB_HTTP_MANAGEMENT_PATH: /api/v1/management
      WEB_HTTP_IDENTITY_PORT: 7171
      WEB_HTTP_IDENTITY_PATH: /api/v1/identity

    envSecrets:
      EDC_API_CONTROL_AUTH_APIKEY_VALUE: ApiKeyDefaultValue
      EDC_VAULT_CLIENTSECRET: "${APP_CLIENT_SECRET}"
      EDC_API_AUTH_KEY: "ApiKeyDefaultValue"

dashboard:
  image:
    repository: acrmvdpaul.azurecr.io/mvd/dashboard
    tag: ${RESOURCES_PREFIX}
    pullPolicy: Always

  imagePullSecrets: [ { name: acr-creds } ]

  volumes:
    - name: appconfig
      hostPath:
        path: /host/resources/appconfig/

  ingress:
    enabled: true
    ingressClassName: "nginx"
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/rewrite-target: /$2
    hosts:
      - host: ${PARTICIPANT}.dashboard
        paths:
          - path: /
            pathType: Prefix
            port: 80